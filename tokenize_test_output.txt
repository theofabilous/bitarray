

sizeof X: 32
offsets: c=0, val=8, p=16, s=24
Summed sizes: 21
Address of first member: 0x16f062ea0
Address of last member: 0x16f062eb8
Diff: 24, diff w/size: 26
c: ab, val: 18446744073709551615, *p: 0x0, s: 2
c: ab, val: 18446744073709551615, *p: 0x0, s: 2
c: ab, val: 18446744073709551615, *p: 0x0, s: 2
c: AB, val: 5050505050, *p: 0xffff, s: 200
c: AB, val: 5050505050, *p: 0xffff, s: 201
c: ab, val: 18446744073709551615, *p: 0x0, s: 2
ptr!
ptr!
ptr!
char!
Has builtin ctzll!


[INPUT]: u(31+1)->$1=={00dc}


u ( 31 + 1 ) -> $ 1 == { 00dc } 


--- Tree representation ---
[32m->[0m(
  [32mu[0m(
    [32m+[0m([36m31[0m,[36m1[0m)[32m+[0m
  )[32mu[0m,
  [32m==[0m(
    [32m$[0m([36m1[0m)[32m$[0m,
    [32m{}[0m([36m00dc[0m)[32m{}[0m
  )[32m==[0m
)[32m->[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mRAW_VALUE         [35m00dc               [0m
[33m2             [32mEQUAL?            [36m$0     [36m$1     [0m
[33m3             [32mNOT               [36m$2                 [0m
[33m4             [32mIF_JUMP           [36m$3     [31m@9     [0m
[33m5             [32mPLUS              [35m31     [35m1      [0m
[33m6             [32mREAD              [35mul     [36m$5     [0m
[33m7             [32mYIELD             [36m$6                 [0m
[33m8             [32mJUMP              [31m@0                 [0m
[33m9             [32mEND               [35m0                  [0m

---------------------


[INPUT]: $1=u32=>m{0x0B |> 1,0b0101 |> 2, 52 |> 3, 52 |> 4, 0x001 |> 5}


$ 1 = u 32 => m{ 0x0B |> 1 , 0b0101 |> 2 , 52 |> 3 , 52 |> 4 , 0x001 |> 5 } 


--- Tree representation ---
[32m=[0m(
  [32m$[0m([36m1[0m)[32m$[0m,
  [32m=>[0m(
    [32mu[0m([36m32[0m)[32mu[0m,
    [32mm![0m(
      [32m|>[0m([36m0x0B[0m,[36m1[0m)[32m|>[0m,
      [32m|>[0m([36m0b0101[0m,[36m2[0m)[32m|>[0m,
      [32m|>[0m([36m52[0m,[36m3[0m)[32m|>[0m,
      [32m|>[0m([36m52[0m,[36m4[0m)[32m|>[0m,
      [32m|>[0m([36m0x001[0m,[36m5[0m)[32m|>[0m
    )[32mm![0m
  )[32m=>[0m
)[32m=[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mREAD              [35mul     [35m32     [0m
[33m2             [32mMATCH_BEGIN       [31m@13                [0m
[33m3             [32mCASE              [35m0x0B   [31m@5     [0m
[33m4             [32mLOAD_CONST        [35m1                  [0m
[33m5             [32mCASE              [35m0b0101 [31m@7     [0m
[33m6             [32mLOAD_CONST        [35m2                  [0m
[33m7             [32mCASE              [35m52     [31m@9     [0m
[33m8             [32mLOAD_CONST        [35m3                  [0m
[33m9             [32mCASE              [35m52     [31m@11    [0m
[33m10            [32mLOAD_CONST        [35m4                  [0m
[33m11            [32mCASE              [35m0x001  [31m@13    [0m
[33m12            [32mLOAD_CONST        [35m5                  [0m
[33m13            [32mMATCH_END         [31m@2                 [0m
[33m14            [32mMATCH_WITH        [36m$1     [36m$13    [0m
[33m15            [32mASSIGN            [36m$0     [36m$14    [0m
[33m16            [32mEND               [35m0                  [0m

---------------------


[INPUT]: $25=u(i31%%2)%5


$ 25 = u ( i 31 %% 2 ) % 5 


--- Tree representation ---
[32m=[0m(
  [32m$[0m([36m25[0m)[32m$[0m,
  [32m%[0m(
    [32mu[0m(
      [32m%%[0m(
        [32mi[0m([36m31[0m)[32mi[0m,
        [36m2[0m
      )[32m%%[0m
    )[32mu[0m,
    [36m5[0m
  )[32m%[0m
)[32m=[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m25                 [0m
[33m1             [32mREAD              [35mil     [35m31     [0m
[33m2             [32mALIGN             [36m$1     [35m2      [0m
[33m3             [32mREAD              [35mul     [36m$2     [0m
[33m4             [32mMODULO            [36m$3     [35m5      [0m
[33m5             [32mASSIGN            [36m$0     [36m$4     [0m
[33m6             [32mEND               [35m0                  [0m

---------------------


[INPUT]: b16=>m{0x0B |> u31, u32 |> i16}


b 16 => m{ 0x0B |> u 31 , u 32 |> i 16 } 


--- Tree representation ---
[32m=>[0m(
  [32mb[0m([36m16[0m)[32mb[0m,
  [32mm![0m(
    [32m|>[0m(
      [36m0x0B[0m,
      [32mu[0m([36m31[0m)[32mu[0m
    )[32m|>[0m,
    [32m|>[0m(
      [32mu[0m([36m32[0m)[32mu[0m,
      [32mi[0m([36m16[0m)[32mi[0m
    )[32m|>[0m
  )[32mm![0m
)[32m=>[0m

------ BYTECODE -----

[33m0             [32mREAD              [35mbl     [35m16     [0m
[33m1             [32mMATCH_BEGIN       [31m@7                 [0m
[33m2             [32mCASE              [35m0x0B   [31m@4     [0m
[33m3             [32mREAD              [35mul     [35m31     [0m
[33m4             [32mREAD              [35mul     [35m32     [0m
[33m5             [32mCASE              [36m$4     [31m@7     [0m
[33m6             [32mREAD              [35mil     [35m16     [0m
[33m7             [32mMATCH_END         [31m@1                 [0m
[33m8             [32mMATCH_WITH        [36m$0     [36m$7     [0m
[33m9             [32mRETURN            [36m$8                 [0m

---------------------


[INPUT]: u32=>m{0x0B, 0b001, 35}


u 32 => m{ 0x0B , 0b001 , 35 } 


--- Tree representation ---
[32m=>[0m(
  [32mu[0m([36m32[0m)[32mu[0m,
  [32mm![0m(
    [36m0x0B[0m,
    [36m0b001[0m,
    [36m35[0m
  )[32mm![0m
)[32m=>[0m

------ BYTECODE -----

[33m0             [32mREAD              [35mul     [35m32     [0m
[33m1             [32mMATCH_BEGIN       [31m@5                 [0m
[33m2             [32mCASE              [35m0x0B   [31m@3     [0m
[33m3             [32mCASE              [35m0b001  [31m@4     [0m
[33m4             [32mCASE              [35m35     [31m@5     [0m
[33m5             [32mMATCH_END         [31m@1                 [0m
[33m6             [32mMATCH_WITH        [36m$0     [36m$5     [0m
[33m7             [32mRETURN            [36m$6                 [0m

---------------------


[INPUT]: m{0x0B, 0b001, 35}


m{ 0x0B , 0b001 , 35 } 


--- Tree representation ---
[32mm![0m(
  [36m0x0B[0m,
  [36m0b001[0m,
  [36m35[0m
)[32mm![0m

------ BYTECODE -----

[33m0             [32mMATCH_BEGIN       [31m@4                 [0m
[33m1             [32mCASE              [35m0x0B   [31m@2     [0m
[33m2             [32mCASE              [35m0b001  [31m@3     [0m
[33m3             [32mCASE              [35m35     [31m@4     [0m
[33m4             [32mMATCH_END         [31m@0                 [0m
[33m5             [32mRETURN            [36m$4                 [0m

---------------------


[INPUT]: $1=(u32?u1:u2)


$ 1 = ( u 32 ? u 1 : u 2 ) 


--- Tree representation ---
[32m=[0m(
  [32m$[0m([36m1[0m)[32m$[0m,
  [32m?[0m(
    [32mu[0m([36m32[0m)[32mu[0m,
    [32m:[0m(
      [32mu[0m([36m1[0m)[32mu[0m,
      [32mu[0m([36m2[0m)[32mu[0m
    )[32m:[0m
  )[32m?[0m
)[32m=[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mREAD              [35mul     [35m32     [0m
[33m2             [32mIF_JUMP           [36m$1     [31m@5     [0m
[33m3             [32mREAD              [35mul     [35m2      [0m
[33m4             [32mSET_REGISTER      [31m@6     [36m$3     [0m
[33m5             [32mJUMP              [31m@7                 [0m
[33m6             [32mREAD              [35mul     [35m1      [0m
[33m7             [32mASSIGN            [36m$0     [36m$6     [0m
[33m8             [32mEND               [35m0                  [0m

---------------------


[INPUT]: i33+5{u31}-{000dc}>>7


i 33 + 5 { u31 } - { 000dc } >> 7 


--- Tree representation ---
[32m+[0m(
  [32mi[0m([36m33[0m)[32mi[0m,
  [32m-[0m(
    [32m{}[0m([36mu31[0m)[32m{}[0m,
    [32m>>[0m(
      [32m{}[0m([36m000dc[0m)[32m{}[0m,
      [36m7[0m
    )[32m>>[0m
  )[32m-[0m
)[32m+[0m

------ BYTECODE -----

[33m0             [32mREAD              [35mil     [35m33     [0m
[33m1             [32mRAW_VALUE         [35mu31                [0m
[33m2             [32mRAW_VALUE         [35m000dc              [0m
[33m3             [32mSHIFT_RIGHT       [36m$2     [35m7      [0m
[33m4             [32mMINUS             [36m$1     [36m$3     [0m
[33m5             [32mPLUS              [36m$0     [36m$4     [0m
[33m6             [32mRETURN            [36m$5                 [0m

---------------------


[INPUT]: $(50+B4)=u59%(10*2)


$ ( 50 + B 4 ) = u 59 % ( 10 * 2 ) 


--- Tree representation ---
[32m=[0m(
  [32m$[0m(
    [32m+[0m(
      [36m50[0m,
      [32mB[0m([36m4[0m)[32mB[0m
    )[32m+[0m
  )[32m$[0m,
  [32m%[0m(
    [32mu[0m([36m59[0m)[32mu[0m,
    [32m*[0m([36m10[0m,[36m2[0m)[32m*[0m
  )[32m%[0m
)[32m=[0m
Require error
Require error! $
Error compiling tree! Error code: -3


[INPUT]: $(50+1)=u59%(10*2)


$ ( 50 + 1 ) = u 59 % ( 10 * 2 ) 


--- Tree representation ---
[32m=[0m(
  [32m$[0m(
    [32m+[0m([36m50[0m,[36m1[0m)[32m+[0m
  )[32m$[0m,
  [32m%[0m(
    [32mu[0m([36m59[0m)[32mu[0m,
    [32m*[0m([36m10[0m,[36m2[0m)[32m*[0m
  )[32m%[0m
)[32m=[0m
Require error
Require error! $
Error compiling tree! Error code: -3


[INPUT]: $1=(u32 || 10 ?u1:u2)


$ 1 = ( u 32 || 10 ? u 1 : u 2 ) 


--- Tree representation ---
[32m=[0m(
  [32m$[0m([36m1[0m)[32m$[0m,
  [32m?[0m(
    [32m||[0m(
      [32mu[0m([36m32[0m)[32mu[0m,
      [36m10[0m
    )[32m||[0m,
    [32m:[0m(
      [32mu[0m([36m1[0m)[32mu[0m,
      [32mu[0m([36m2[0m)[32mu[0m
    )[32m:[0m
  )[32m?[0m
)[32m=[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mREAD              [35mul     [35m32     [0m
[33m2             [32mOR?               [36m$1     [35m10     [0m
[33m3             [32mIF_JUMP           [36m$2     [31m@6     [0m
[33m4             [32mREAD              [35mul     [35m2      [0m
[33m5             [32mSET_REGISTER      [31m@7     [36m$4     [0m
[33m6             [32mJUMP              [31m@8                 [0m
[33m7             [32mREAD              [35mul     [35m1      [0m
[33m8             [32mASSIGN            [36m$0     [36m$7     [0m
[33m9             [32mEND               [35m0                  [0m

---------------------


[INPUT]: $1=u($1)+u10*10


$ 1 = u ( $ 1 ) + u 10 * 10 


--- Tree representation ---
[32m=[0m(
  [32m$[0m([36m1[0m)[32m$[0m,
  [32m+[0m(
    [32mu[0m(
      [32m$[0m([36m1[0m)[32m$[0m
    )[32mu[0m,
    [32m*[0m(
      [32mu[0m([36m10[0m)[32mu[0m,
      [36m10[0m
    )[32m*[0m
  )[32m+[0m
)[32m=[0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mGET_ENV           [35m1                  [0m
[33m2             [32mREAD              [35mul     [36m$1     [0m
[33m3             [32mREAD              [35mul     [35m10     [0m
[33m4             [32mTIMES             [36m$3     [35m10     [0m
[33m5             [32mPLUS              [36m$2     [36m$4     [0m
[33m6             [32mASSIGN            [36m$0     [36m$5     [0m
[33m7             [32mEND               [35m0                  [0m

---------------------


[INPUT]: u($1?(1:2))[$1+10]


u ( $ 1 ? ( 1 : 2 ) ) [ $ 1 + 10 ] 


--- Tree representation ---
[32m[][0m(
  [32mu[0m(
    [32m?[0m(
      [32m$[0m([36m1[0m)[32m$[0m,
      [32m:[0m([36m1[0m,[36m2[0m)[32m:[0m
    )[32m?[0m
  )[32mu[0m,
  [32m+[0m(
    [32m$[0m([36m1[0m)[32m$[0m,
    [36m10[0m
  )[32m+[0m
)[32m[][0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mPLUS              [36m$0     [35m10     [0m
[33m2             [32mGET_ENV           [35m1                  [0m
[33m3             [32mIF_JUMP           [36m$2     [31m@6     [0m
[33m4             [32mLOAD_CONST        [35m2                  [0m
[33m5             [32mSET_REGISTER      [31m@7     [36m$4     [0m
[33m6             [32mJUMP              [31m@8                 [0m
[33m7             [32mLOAD_CONST        [35m1                  [0m
[33m8             [32mREAD_ARRAY        [35mul     [36m$7     [36m$1[0m
[33m9             [32mRETURN            [36m$8                 [0m

---------------------


[INPUT]: u(32)[10]


u ( 32 ) [ 10 ] 


--- Tree representation ---
[32m[][0m(
  [32mu[0m([36m32[0m)[32mu[0m,
  [36m10[0m
)[32m[][0m

------ BYTECODE -----

[33m0             [32mREAD_ARRAY        [35mul     [35m32     [35m10[0m
[33m1             [32mRETURN            [36m$0                 [0m

---------------------


[INPUT]: !($1==10?B4:B8)


! ( $ 1 == 10 ? B 4 : B 8 ) 


--- Tree representation ---
[32m![0m(
  [32m?[0m(
    [32m==[0m(
      [32m$[0m([36m1[0m)[32m$[0m,
      [36m10[0m
    )[32m==[0m,
    [32m:[0m(
      [32mB[0m([36m4[0m)[32mB[0m,
      [32mB[0m([36m8[0m)[32mB[0m
    )[32m:[0m
  )[32m?[0m
)[32m![0m

------ BYTECODE -----

[33m0             [32mGET_ENV           [35m1                  [0m
[33m1             [32mEQUAL?            [36m$0     [35m10     [0m
[33m2             [32mIF_JUMP           [36m$1     [31m@5     [0m
[33m3             [32mSHIFT_LEFT        [35m8      [35m3      [0m
[33m4             [32mSET_REGISTER      [31m@6     [36m$3     [0m
[33m5             [32mJUMP              [31m@7                 [0m
[33m6             [32mSHIFT_LEFT        [35m4      [35m3      [0m
[33m7             [32mSKIP              [36m$6                 [0m
[33m8             [32mEND               [35m0                  [0m

---------------------


[INPUT]: u32->^u1==10


u 32 -> ^ u 1 == 10 


--- Tree representation ---
[32m->[0m(
  [32mu[0m([36m32[0m)[32mu[0m,
  [32m==[0m(
    [32m^[0m(
      [32mu[0m([36m1[0m)[32mu[0m
    )[32m^[0m,
    [36m10[0m
  )[32m==[0m
)[32m->[0m

------ BYTECODE -----

[33m0             [32mPEEK              [35mul     [35m1      [0m
[33m1             [32mEQUAL?            [36m$0     [35m10     [0m
[33m2             [32mNOT               [36m$1                 [0m
[33m3             [32mIF_JUMP           [36m$2     [31m@7     [0m
[33m4             [32mREAD              [35mul     [35m32     [0m
[33m5             [32mYIELD             [36m$4                 [0m
[33m6             [32mJUMP              [31m@0                 [0m
[33m7             [32mEND               [35m0                  [0m

---------------------
